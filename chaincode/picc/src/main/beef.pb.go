// Code generated by protoc-gen-go.
// source: beef.proto
// DO NOT EDIT!

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	beef.proto
	farm.proto
	insurance.proto
	loan.proto

It has these top-level messages:
	Beef
	Farm
	Insurance
	Loan
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// 记录肉牛明细
type Beef struct {
	Farm             string        `protobuf:"bytes,1,opt,name=farm" json:"farm,omitempty"`
	Farmer           string        `protobuf:"bytes,2,opt,name=farmer" json:"farmer,omitempty"`
	Subsidy          int64         `protobuf:"varint,3,opt,name=subsidy" json:"subsidy,omitempty"`
	InvestFromFarmer int64         `protobuf:"varint,4,opt,name=investFromFarmer" json:"investFromFarmer,omitempty"`
	InvestFromFarm   int64         `protobuf:"varint,5,opt,name=investFromFarm" json:"investFromFarm,omitempty"`
	EarLabel         string        `protobuf:"bytes,6,opt,name=earLabel" json:"earLabel,omitempty"`
	Birthday         string        `protobuf:"bytes,7,opt,name=birthday" json:"birthday,omitempty"`
	State            string        `protobuf:"bytes,8,opt,name=state" json:"state,omitempty"`
	InsuranceState   string        `protobuf:"bytes,9,opt,name=insuranceState" json:"insuranceState,omitempty"`
	Checked          bool          `protobuf:"varint,10,opt,name=checked" json:"checked,omitempty"`
	Trace            []*Beef_Trace `protobuf:"bytes,11,rep,name=trace" json:"trace,omitempty"`
	Species          string        `protobuf:"bytes,12,opt,name=species" json:"species,omitempty"`
	PhotoHash        string        `protobuf:"bytes,13,opt,name=photoHash" json:"photoHash,omitempty"`
}

func (m *Beef) Reset()                    { *m = Beef{} }
func (m *Beef) String() string            { return proto.CompactTextString(m) }
func (*Beef) ProtoMessage()               {}
func (*Beef) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Beef) GetTrace() []*Beef_Trace {
	if m != nil {
		return m.Trace
	}
	return nil
}

type Beef_Trace struct {
	Date  string `protobuf:"bytes,1,opt,name=date" json:"date,omitempty"`
	Event string `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
}

func (m *Beef_Trace) Reset()                    { *m = Beef_Trace{} }
func (m *Beef_Trace) String() string            { return proto.CompactTextString(m) }
func (*Beef_Trace) ProtoMessage()               {}
func (*Beef_Trace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func init() {
	proto.RegisterType((*Beef)(nil), "main.Beef")
	proto.RegisterType((*Beef_Trace)(nil), "main.Beef.Trace")
}

func init() { proto.RegisterFile("beef.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x91, 0x4d, 0x4e, 0xc3, 0x30,
	0x10, 0x85, 0x55, 0xf2, 0xd3, 0x64, 0x0a, 0xa8, 0xb2, 0x10, 0x1a, 0x55, 0x2c, 0x2a, 0x16, 0xa8,
	0x62, 0x11, 0x09, 0xb8, 0x01, 0x8b, 0x8a, 0x05, 0xab, 0xc0, 0x05, 0x9c, 0x64, 0xaa, 0x44, 0x90,
	0x1f, 0xd9, 0x6e, 0xa5, 0x9e, 0x8f, 0x8b, 0x61, 0x8f, 0x13, 0x10, 0x65, 0x15, 0xbf, 0xf7, 0x4d,
	0xec, 0x99, 0x79, 0x00, 0x05, 0xd1, 0x2e, 0x1b, 0x54, 0x6f, 0x7a, 0x11, 0xb6, 0xb2, 0xe9, 0x6e,
	0xbf, 0x02, 0x08, 0x9f, 0xad, 0x29, 0x04, 0x84, 0x3b, 0xa9, 0x5a, 0x9c, 0xad, 0x67, 0x9b, 0x34,
	0xe7, 0xb3, 0xb8, 0x86, 0xd8, 0x7d, 0x49, 0xe1, 0x19, 0xbb, 0xa3, 0x12, 0x08, 0x73, 0xbd, 0x2f,
	0x74, 0x53, 0x1d, 0x31, 0xb0, 0x20, 0xc8, 0x27, 0x29, 0xee, 0x61, 0xd9, 0x74, 0x07, 0xd2, 0x66,
	0xab, 0xfa, 0x76, 0xeb, 0xff, 0x0d, 0xb9, 0xe4, 0x9f, 0x2f, 0xee, 0xe0, 0xf2, 0xaf, 0x87, 0x11,
	0x57, 0x9e, 0xb8, 0x62, 0x05, 0x09, 0x49, 0xf5, 0x2a, 0x0b, 0xfa, 0xc4, 0x98, 0xfb, 0xf8, 0xd1,
	0x8e, 0x15, 0x8d, 0x32, 0x75, 0x25, 0x8f, 0x38, 0xf7, 0x6c, 0xd2, 0xe2, 0x0a, 0x22, 0x6d, 0xa4,
	0x21, 0x4c, 0x18, 0x78, 0xe1, 0x5f, 0xd5, 0x7b, 0x25, 0xbb, 0x92, 0xde, 0x18, 0xa7, 0x8c, 0x4f,
	0x5c, 0x37, 0x63, 0x59, 0x53, 0xf9, 0x41, 0x15, 0x82, 0x2d, 0x48, 0xf2, 0x49, 0xda, 0x1b, 0x22,
	0xa3, 0x64, 0x49, 0xb8, 0x58, 0x07, 0x9b, 0xc5, 0xe3, 0x32, 0x73, 0x8b, 0xcc, 0xdc, 0x12, 0xb3,
	0x77, 0xe7, 0xe7, 0x1e, 0xf3, 0x96, 0x06, 0x2a, 0x1b, 0xd2, 0x78, 0xce, 0x4f, 0x4c, 0x52, 0xdc,
	0x40, 0x3a, 0xd4, 0x36, 0x83, 0x17, 0xa9, 0x6b, 0xbc, 0x60, 0xf6, 0x6b, 0xac, 0x1e, 0x20, 0xe2,
	0x7b, 0x5c, 0x24, 0x95, 0x6b, 0x70, 0x8c, 0xc4, 0x9d, 0xdd, 0x50, 0x74, 0xa0, 0xce, 0x8c, 0x89,
	0x78, 0x51, 0xc4, 0x1c, 0xe9, 0xd3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x0b, 0x18, 0xae,
	0xe0, 0x01, 0x00, 0x00,
}
